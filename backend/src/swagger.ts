import { Express } from 'express';
import swaggerUi from 'swagger-ui-express';
import * as fs from 'fs';
import * as path from 'path';

// Try to load auto-generated swagger file, fallback to manual if not found
let swaggerSpec;
const autoGeneratedPath = path.join(__dirname, 'swagger-output.json');

try {
  if (fs.existsSync(autoGeneratedPath)) {
    swaggerSpec = JSON.parse(fs.readFileSync(autoGeneratedPath, 'utf8'));
    console.log('Using auto-generated Swagger documentation');
  } else {
    console.log('Auto-generated swagger file not found. Run "npm run swagger" to generate it.');
    // Fallback basic spec
    swaggerSpec = {
      openapi: '3.0.0',
      info: {
        title: 'Trip Planner API',
        version: '1.0.0',
        description: 'A simple trip planner API'
      },
      paths: {}
    };
  }
} catch (error) {
  console.error('Error loading swagger spec:', error);
  swaggerSpec = {
    openapi: '3.0.0',
    info: {
      title: 'Trip Planner API',
      version: '1.0.0',
      description: 'A simple trip planner API'
    },
    paths: {}
  };
}

// Debug: log the generated spec to see if routes are being picked up
console.log('Swagger paths found:', Object.keys((swaggerSpec as any).paths || {}));

export const setupSwagger = (app: Express) => {
  app.use('/docs', swaggerUi.serve, swaggerUi.setup(swaggerSpec, {
    explorer: true,
    customCss: '.swagger-ui .topbar { display: none }'
  }));
  
  // Also serve the raw swagger spec
  app.get('/swagger.json', (req, res) => {
    res.setHeader('Content-Type', 'application/json');
    res.send(swaggerSpec);
  });
};
